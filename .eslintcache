[{"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx":"1","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx":"2","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts":"3","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"5","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx":"6","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"7","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx":"8","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx":"9","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx":"12","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts":"13","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts":"14","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts":"15","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts":"17","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx":"18","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx":"20","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx":"21","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx":"22","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts":"23","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx":"24","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts":"25","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx":"26","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"27","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Login\\Login.tsx":"28"},{"size":382,"mtime":1617277097763,"results":"29","hashOfConfig":"30"},{"size":1346,"mtime":1625916609704,"results":"31","hashOfConfig":"30"},{"size":425,"mtime":1611322088332,"results":"32","hashOfConfig":"30"},{"size":919,"mtime":1617328802730,"results":"33","hashOfConfig":"30"},{"size":981,"mtime":1617328275017,"results":"34","hashOfConfig":"30"},{"size":624,"mtime":1626939296216,"results":"35","hashOfConfig":"30"},{"size":442,"mtime":1616568125721,"results":"36","hashOfConfig":"30"},{"size":2053,"mtime":1626868934799,"results":"37","hashOfConfig":"30"},{"size":601,"mtime":1625917466348,"results":"38","hashOfConfig":"30"},{"size":497,"mtime":1612547726782,"results":"39","hashOfConfig":"30"},{"size":1136,"mtime":1626941657168,"results":"40","hashOfConfig":"30"},{"size":295,"mtime":1612547726772,"results":"41","hashOfConfig":"30"},{"size":1640,"mtime":1620192195368,"results":"42","hashOfConfig":"30"},{"size":4677,"mtime":1626941606780,"results":"43","hashOfConfig":"30"},{"size":711,"mtime":1626954741508,"results":"44","hashOfConfig":"30"},{"size":1102,"mtime":1619999782487,"results":"45","hashOfConfig":"30"},{"size":11072,"mtime":1625909243851,"results":"46","hashOfConfig":"30"},{"size":2327,"mtime":1625909168709,"results":"47","hashOfConfig":"30"},{"size":912,"mtime":1626868934793,"results":"48","hashOfConfig":"30"},{"size":2750,"mtime":1625913710773,"results":"49","hashOfConfig":"30"},{"size":172,"mtime":1619902534195,"results":"50","hashOfConfig":"30"},{"size":1446,"mtime":1626952052387,"results":"51","hashOfConfig":"30"},{"size":1329,"mtime":1625917017453,"results":"52","hashOfConfig":"30"},{"size":1061,"mtime":1625915169683,"results":"53","hashOfConfig":"30"},{"size":1291,"mtime":1626951724715,"results":"54","hashOfConfig":"30"},{"size":800,"mtime":1626867972122,"results":"55","hashOfConfig":"30"},{"size":1124,"mtime":1626951380666,"results":"56","hashOfConfig":"30"},{"size":1021,"mtime":1626959250037,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1c8ojw1",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx",[],["132","133"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx",["134"],"import React from 'react';\nimport s from \"./App.module.css\"\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ReduxStoreType} from \"./redux/redux_store\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\n\ntype PropsType = {\n    store: ReduxStoreType\n}\n\nconst App: React.FC<PropsType> = (props) => {\n    // const state = props.store.getState();\n\n    return (\n        <BrowserRouter>\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer />}/>\n                    <Route path={'/dialogs'} render={() => <DialogsContainer />}/>\n                    <Route path={'/users'} render={() => <UsersContainer />} />\n                    <Route path={'/login'} render={() => <Login />} />\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n",["135","136"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts",[],["137","138"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx",["139","140","141"],"import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar",["142","143"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],["144","145"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["146"],"import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avaPost}/>\r\n            { props.message }\r\n            <div>\r\n                <span>likes: { props.likesCount }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx",["147"],"import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../types\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n    isAuth: boolean\r\n}\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name}\r\n                                                                              key={dialog.id}\r\n                                                                              id={dialog.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message message={message.message}\r\n                                                                              key={message.id}\r\n                                                                              id={message.id}/>);\r\n\r\n    const onSendMessageClickHandler = () => {\r\n        props.sendMessage()\r\n    };\r\n\r\n    const onNewMessageChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea placeholder='enter your message'\r\n                                   value={props.dialogsPage.newMessageBody}\r\n                                   onChange={onNewMessageChangeHandler}/></div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClickHandler}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx",["148"],"import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    userId: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img />\r\n            { props.isAuth ?\r\n                <span className={s.loginBlock}>{props.login}</span> :\r\n                <NavLink to={'/login'}><span className={s.loginBlock}>LogIn</span></NavLink>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["149"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts",["150"],"import {ActionsType, PhotosType, PostsType, ProfilePageType, ProfileType} from \"../types\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst CHANGE_NEW_TEXT = \"CHANGE_NEW_TEXT\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n// const DELET_POST = \"DELET_POST\";\r\n// const SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nconst initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 45},\r\n        {id: 2, message: 'Programming.....', likesCount: 18}\r\n    ] as Array<PostsType>,\r\n    messageForNewPost: \"\",\r\n    profile: {\r\n        fullName: 'undefined',\r\n        userId: 99999999,\r\n        aboutMe: \"some about me\",\r\n        photos: {\r\n            small: \"https://t4.ftcdn.net/jpg/03/32/59/65/360_F_332596535_lAdLhf6KzbW6PWXBWeIFTovTii1drkbT.jpg\",\r\n            large: \"https://t4.ftcdn.net/jpg/03/32/59/65/360_F_332596535_lAdLhf6KzbW6PWXBWeIFTovTii1drkbT.jpg\"\r\n        },\r\n        status: \"statusFromReducer\"\r\n    }\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst profile_reducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {id: new Date().getTime(), message: state.messageForNewPost, likesCount: 0}\r\n                ],\r\n                messageForNewPost: \"\"\r\n            };\r\n        }\r\n        case CHANGE_NEW_TEXT: {\r\n            return {\r\n                ...state,\r\n                messageForNewPost: action.newText\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    status: action.status\r\n                }\r\n            };\r\n        }\r\n        // case DELET_POST:\r\n        //     return {\r\n        //         ...state,\r\n        //         posts: state.posts.filter(p => p.id != action.postId)\r\n        //     };\r\n        // case SAVE_PHOTO_SUCCESS:\r\n        //     return {\r\n        //         ...state,\r\n        //         profile: {...state.profile, photos: action.photos}\r\n        //     };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addPost = () => {\r\n    return {\r\n        type: ADD_POST\r\n    } as const\r\n};\r\nexport const changeNewText = (newText: string) => {\r\n    return {\r\n        type: CHANGE_NEW_TEXT,\r\n        newText: newText\r\n    } as const\r\n};\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n};\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const profile = await usersAPI.getProfile(+userId);\r\n    const status = await profileAPI.getStatus(+userId);\r\n    dispatch(setUserProfile(profile));\r\n    dispatch(setStatus(status))\r\n};\r\nexport const setStatus = (status: string) => {\r\n\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    } as const\r\n};\r\n// export const updateStatus = (status: string) => {\r\n//     return {\r\n//         type:\r\n//     } as const\r\n// }\r\n// export const deletePostAC = (postId: number) => {\r\n//     return {\r\n//         type: DELET_POST,\r\n//         postId\r\n//     } as const\r\n// };\r\n// export const savePhotoSuccessAC = (photos: PhotosType) => {\r\n//     return {\r\n//         type: SAVE_PHOTO_SUCCESS,\r\n//         photos\r\n//     } as const\r\n// };\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n};\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n};\r\n// export const savePhoto = (file: any) => async (dispatch: any) => {\r\n//     const response = await usersAPI.savePhoto(file);\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(savePhotoSuccessAC(response.data.data.photos))\r\n//     }\r\n// };\r\n// export const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n//     const userId = getState().auth.userId;\r\n//     const response = await profileAPI.saveProfile(profile)\r\n// };\r\n\r\n\r\nexport default profile_reducer\r\n","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["151","152"],"import React from 'react'\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, changeNewText} from \"../../../redux/profile_reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType, ProfilePageType} from \"../../../types\";\r\nimport {AppStateType} from \"../../../redux/redux_store\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    messageForNewPost: string\r\n}\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profile_reducer.posts,\r\n        messageForNewPost: state.profile_reducer.messageForNewPost\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => dispatch(changeNewText(text)),\r\n        addPost: () => dispatch(addPost())\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts",["153"],"import {ActionsType, UserProfileType} from \"../types\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserProfileType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const);\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\n// export const follow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.follow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(followAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.unfollow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(unfollowAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n\r\nexport default usersReducer\r\n\r\n\r\n/*\r\nimport {UserProfileType, UsersPageType} from \"../types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            fullName: \"Misha\",\r\n            status: \"Still learning =)\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Saint-P\", country: \"Russia\"}\r\n        },\r\n        {\r\n            id: 2,\r\n            fullName: \"LoL\",\r\n            status: \"What?!\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Minsk\", country: \"Belarus\"}\r\n        },\r\n        {\r\n            id: 3,\r\n            fullName: \"Dog\",\r\n            status: \"Hrrrr\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Kiev\", country: \"Ukraine\"}\r\n        }\r\n    ] as Array<UserProfileType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // array of users ids\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst users_reducer = (state: UsersPageType, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        // case FOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        //     };\r\n        // case UNFOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n        //     };\r\n        // case SET_USERS:\r\n        //     return {\r\n        //         ...state,\r\n        //         status: action.status\r\n        //     };\r\n        // case SET_USER_PROFILE:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: action.users\r\n        //     };\r\n        // case SET_CURRENT_PAGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         followingInProgress: action.isFetching\r\n        //             ? [...state.followingInProgress, action.userIf]\r\n        //             : state.followingInProgress.filter(id => != action.userId)\r\n        //     };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const);\r\n\r\n// export const requestUsers = (page: number, pageSize: number) => {\r\n//     return async (dispatch: any) => {\r\n//         dispatch(toggleIsFetching(true));\r\n//         dispatch(setCurrentPage(page));\r\n//\r\n//         let data = await usersAPI.getUsers(page, pageSize);\r\n//         dispatch(toggleIsFetching(false));\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(setTotalUsersCount(data.totalCount))\r\n//     }\r\n// };\r\n//\r\n// const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n//     dispatch(toggleFollowingInProgress(true, userId))\r\n//     let response = await apiMethod(userId)\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(actionCreator(userId))\r\n//     }\r\n//     dispatch(toggleFollowingInProgress(false, userId))\r\n// };\r\n//\r\n// export const follow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), followSuccess)\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n//     }\r\n// };\r\n\r\n\r\n// export const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getProfile(userId);\r\n//     dispatch(setUserProfileAC(response.data))\r\n// };\r\n// export const getStatus = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getStatus(userId);\r\n//     dispatch(setStatusAC(response.data))\r\n// };\r\n// export const updateStatus = (userId: string) => async (dispatch: any) => {\r\n//     try {\r\n//         const response = await usersAPI.updateStatus(status);\r\n//\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setStatus(status))\r\n//         }\r\n//     } catch (error) {\r\n//         //\r\n//     }\r\n// };\r\n// export const savePhoto = (file: any) => async (dispatch: any) => {\r\n//     const response = await usersAPI.savePhoto(file);\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(savePhotoSuccessAC(response.data.data.photos))\r\n//     }\r\n// };\r\n// export const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n//     const userId = getState().auth.userId;\r\n//     const response = await profileAPI.saveProfile(profile)\r\n// };\r\n\r\n\r\nexport default users_reducer\r\n*/","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx",["154"],"import {connect} from \"react-redux\";\r\nimport {UserProfileType} from \"../../types\";\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users_reducer\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport {Users} from \"./Users\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserProfileType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nfunction UsersAPI(props: UsersPropsType) {\r\n\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize);\r\n    }, []);\r\n\r\n    const setCurrentPageHandler = (p: number) => {\r\n        props.getUsers(p, props.pageSize);\r\n    };\r\n\r\n    return <>\r\n        {props.isFetching ? <Preloader/> : null}\r\n        <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            currentPage={props.currentPage}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            setCurrentPageHandler={setCurrentPageHandler}\r\n            toggleFollowingProgress={props.toggleFollowingProgress}\r\n            followinInProgress={props.followingInProgress}\r\n        />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n})(UsersAPI);","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx",["155"],"import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {UserProfileType} from \"../../types\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserProfileType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPageHandler: (p: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followinInProgress: number[]\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    pages.map(p => {\r\n                        return <span className={props.currentPage === p ? s.selectedPage : \"\"}\r\n                                     onClick={(e) => {\r\n                                         props.setCurrentPageHandler(p)\r\n                                     }}> |{p}| </span>\r\n                    })\r\n                }\r\n                ...\r\n                <span className={props.currentPage === pagesCount ? s.selectedPage : \"\"}\r\n                      onClick={(e) => {\r\n                          props.setCurrentPageHandler(pagesCount)\r\n                      }}> |{pagesCount}| </span>\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${u.id}`}>\r\n                        <img className={s.userAva}\r\n                             src={u.photos.small != null ?\r\n                                 u.photos.small :\r\n                                 \"https://t4.ftcdn.net/jpg/03/32/59/65/360_F_332596535_lAdLhf6KzbW6PWXBWeIFTovTii1drkbT.jpg\"}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followinInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followinInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <hr/>\r\n                </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx",["156"],"import React from \"react\";\r\nimport preloader from \"../../preloader.gif\";\r\n\r\nexport function Preloader() {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx",["157"],"import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfileType} from \"../../types\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer(props: PropsType) {\r\n\r\n    useEffect(() => {\r\n        let userId = +props.match.params.userId;\r\n        if(!userId) {\r\n            userId = 14348\r\n        }\r\n        props.getUserProfile(+userId)\r\n    }, []);\r\n\r\n    return (\r\n        <Profile {...props} getStatus={props.getStatus} updateStatus={props.updateStatus}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profile_reducer.profile\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx",["158","159"],"import React, {useEffect} from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthStateType} from \"../../types\";\r\nimport {getAuthUserData} from \"../../redux/auth_reducer\";\r\n\r\ntype mapStateToProps = {\r\n    isAuth: boolean\r\n    login: string\r\n    email: string\r\n    userId: number\r\n}\r\ntype mapDispatchToProps = {\r\n    // setAuthUserData: (id: number, login: string, email: string) => void\r\n    getAuthUserData: () => void\r\n}\r\ntype HeaderContainerPropsType = mapStateToProps & mapDispatchToProps\r\n\r\nfunction HeaderContainer(props: HeaderContainerPropsType) {\r\n\r\n    useEffect( () => {\r\n        props.getAuthUserData()\r\n    }, []);\r\n\r\n    return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state: AuthStateType): mapStateToProps => {\r\n    return {\r\n        isAuth: state.auth_reducer.isAuth,\r\n        login: state.auth_reducer.login,\r\n        email: state.auth_reducer.email,\r\n        userId: state.auth_reducer.userId\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAuthUserData\r\n})(HeaderContainer)","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Login\\Login.tsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":18,"column":17,"nodeType":"174","endLine":18,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":21,"column":17,"nodeType":"174","endLine":21,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":24,"column":17,"nodeType":"174","endLine":24,"endColumn":20},{"ruleId":"160","replacedBy":"175"},{"ruleId":"162","replacedBy":"176"},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":12,"column":13,"nodeType":"174","endLine":12,"endColumn":41},{"ruleId":"164","severity":1,"message":"181","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":16,"column":13,"nodeType":"174","endLine":16,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":26,"column":17,"nodeType":"174","endLine":26,"endColumn":83},{"ruleId":"164","severity":1,"message":"182","line":1,"column":22,"nodeType":"166","messageId":"167","endLine":1,"endColumn":32},{"ruleId":"164","severity":1,"message":"183","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":13},{"ruleId":"164","severity":1,"message":"184","line":6,"column":20,"nodeType":"166","messageId":"167","endLine":6,"endColumn":35},{"ruleId":"185","severity":1,"message":"186","line":71,"column":65,"nodeType":"187","messageId":"188","endLine":71,"endColumn":67},{"ruleId":"189","severity":1,"message":"190","line":31,"column":8,"nodeType":"191","endLine":31,"endColumn":10,"suggestions":"192"},{"ruleId":"179","severity":1,"message":"180","line":48,"column":25,"nodeType":"174","endLine":51,"endColumn":128},{"ruleId":"179","severity":1,"message":"180","line":6,"column":9,"nodeType":"174","endLine":6,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":32,"column":8,"nodeType":"191","endLine":32,"endColumn":10,"suggestions":"193"},{"ruleId":"189","severity":1,"message":"190","line":23,"column":8,"nodeType":"191","endLine":23,"endColumn":10,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":28,"column":7,"nodeType":"166","messageId":"197","endLine":28,"endColumn":22},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar",["198"],["199"],["198"],["199"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["198"],["199"],["198"],["199"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Redirect' is defined but never used.","'PhotosType' is defined but never used.","'React' is defined but never used.","'ProfilePageType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["200"],["201"],["202"],"@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"203","fix":"206"},"Update the dependencies array to be: [props]",{"range":"207","text":"208"},{"range":"209","text":"208"},{"range":"210","text":"208"},[1102,1104],"[props]",[1038,1040],[663,665]]