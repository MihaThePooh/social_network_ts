[{"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx":"1","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx":"2","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts":"3","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"5","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx":"6","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"7","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx":"8","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx":"9","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx":"12","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts":"13","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts":"14","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts":"15","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts":"17","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx":"18","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx":"20","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx":"21","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx":"22","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts":"23","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx":"24","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts":"25","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx":"26"},{"size":382,"mtime":1617277097763,"results":"27","hashOfConfig":"28"},{"size":1346,"mtime":1625916609704,"results":"29","hashOfConfig":"28"},{"size":425,"mtime":1611322088332,"results":"30","hashOfConfig":"28"},{"size":919,"mtime":1617328802730,"results":"31","hashOfConfig":"28"},{"size":981,"mtime":1617328275017,"results":"32","hashOfConfig":"28"},{"size":380,"mtime":1625918125451,"results":"33","hashOfConfig":"28"},{"size":442,"mtime":1616568125721,"results":"34","hashOfConfig":"28"},{"size":2122,"mtime":1625917872964,"results":"35","hashOfConfig":"28"},{"size":601,"mtime":1625917466348,"results":"36","hashOfConfig":"28"},{"size":497,"mtime":1612547726782,"results":"37","hashOfConfig":"28"},{"size":779,"mtime":1620179706609,"results":"38","hashOfConfig":"28"},{"size":295,"mtime":1612547726772,"results":"39","hashOfConfig":"28"},{"size":1640,"mtime":1620192195368,"results":"40","hashOfConfig":"28"},{"size":4539,"mtime":1625913989312,"results":"41","hashOfConfig":"28"},{"size":633,"mtime":1624112723716,"results":"42","hashOfConfig":"28"},{"size":1102,"mtime":1619999782487,"results":"43","hashOfConfig":"28"},{"size":11072,"mtime":1625909243851,"results":"44","hashOfConfig":"28"},{"size":2327,"mtime":1625909168709,"results":"45","hashOfConfig":"28"},{"size":826,"mtime":1625917607272,"results":"46","hashOfConfig":"28"},{"size":2750,"mtime":1625913710773,"results":"47","hashOfConfig":"28"},{"size":172,"mtime":1619902534195,"results":"48","hashOfConfig":"28"},{"size":1289,"mtime":1626868414668,"results":"49","hashOfConfig":"28"},{"size":1329,"mtime":1625917017453,"results":"50","hashOfConfig":"28"},{"size":1061,"mtime":1625915169683,"results":"51","hashOfConfig":"28"},{"size":802,"mtime":1625912830337,"results":"52","hashOfConfig":"28"},{"size":800,"mtime":1626867972122,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1c8ojw1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx",[],["116","117"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx",["118"],"import React from 'react';\nimport s from \"./App.module.css\"\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport {ReduxStoreType} from \"./redux/redux_store\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\n\ntype PropsType = {\n    store: ReduxStoreType\n}\n\nconst App: React.FC<PropsType> = (props) => {\n    // const state = props.store.getState();\n\n    return (\n        <BrowserRouter>\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer />}/>\n                    <Route path={'/dialogs'} render={() => <DialogsContainer />}/>\n                    <Route path={'/users'} render={() => <UsersContainer />} />\n                    <Route path={'/login'} render={() => <Login />} />\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts",[],["119","120"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx",["121","122","123"],"import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],["124","125"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["126"],"import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avaPost}/>\r\n            { props.message }\r\n            <div>\r\n                <span>likes: { props.likesCount }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx",["127"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["128","129"],"import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../types\";\r\n\r\nconst ProfileInfo = (props: ProfileType) => {\r\n\r\n    if (!props) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.avaWallpaper} src=\"\"/>\r\n            </div>\r\n            <span className={s.discriptionBlock}>\r\n                <img className={s.avaProfile} src={props.photos.large} />\r\n                <div>fullName: {props.fullName}</div>\r\n                <div>userАЙДИ: {props.userId}</div>\r\n                <div>aboutMe: {props.aboutMe}</div>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["130","131"],"import React from 'react'\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, changeNewText} from \"../../../redux/profile_reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType, ProfilePageType} from \"../../../types\";\r\nimport {AppStateType} from \"../../../redux/redux_store\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    messageForNewPost: string\r\n}\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profile_reducer.posts,\r\n        messageForNewPost: state.profile_reducer.messageForNewPost\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewPostText: (text: string) => dispatch(changeNewText(text)),\r\n        addPost: () => dispatch(addPost())\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts",["132"],"import {ActionsType, UserProfileType} from \"../types\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserProfileType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const);\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\n// export const follow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.follow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(followAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.unfollow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(unfollowAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n\r\nexport default usersReducer\r\n\r\n\r\n/*\r\nimport {UserProfileType, UsersPageType} from \"../types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            fullName: \"Misha\",\r\n            status: \"Still learning =)\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Saint-P\", country: \"Russia\"}\r\n        },\r\n        {\r\n            id: 2,\r\n            fullName: \"LoL\",\r\n            status: \"What?!\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Minsk\", country: \"Belarus\"}\r\n        },\r\n        {\r\n            id: 3,\r\n            fullName: \"Dog\",\r\n            status: \"Hrrrr\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Kiev\", country: \"Ukraine\"}\r\n        }\r\n    ] as Array<UserProfileType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // array of users ids\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst users_reducer = (state: UsersPageType, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        // case FOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        //     };\r\n        // case UNFOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n        //     };\r\n        // case SET_USERS:\r\n        //     return {\r\n        //         ...state,\r\n        //         status: action.status\r\n        //     };\r\n        // case SET_USER_PROFILE:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: action.users\r\n        //     };\r\n        // case SET_CURRENT_PAGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         followingInProgress: action.isFetching\r\n        //             ? [...state.followingInProgress, action.userIf]\r\n        //             : state.followingInProgress.filter(id => != action.userId)\r\n        //     };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const);\r\n\r\n// export const requestUsers = (page: number, pageSize: number) => {\r\n//     return async (dispatch: any) => {\r\n//         dispatch(toggleIsFetching(true));\r\n//         dispatch(setCurrentPage(page));\r\n//\r\n//         let data = await usersAPI.getUsers(page, pageSize);\r\n//         dispatch(toggleIsFetching(false));\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(setTotalUsersCount(data.totalCount))\r\n//     }\r\n// };\r\n//\r\n// const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n//     dispatch(toggleFollowingInProgress(true, userId))\r\n//     let response = await apiMethod(userId)\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(actionCreator(userId))\r\n//     }\r\n//     dispatch(toggleFollowingInProgress(false, userId))\r\n// };\r\n//\r\n// export const follow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), followSuccess)\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n//     }\r\n// };\r\n\r\n\r\n// export const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getProfile(userId);\r\n//     dispatch(setUserProfileAC(response.data))\r\n// };\r\n// export const getStatus = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getStatus(userId);\r\n//     dispatch(setStatusAC(response.data))\r\n// };\r\n// export const updateStatus = (userId: string) => async (dispatch: any) => {\r\n//     try {\r\n//         const response = await usersAPI.updateStatus(status);\r\n//\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setStatus(status))\r\n//         }\r\n//     } catch (error) {\r\n//         //\r\n//     }\r\n// };\r\n// export const savePhoto = (file: any) => async (dispatch: any) => {\r\n//     const response = await usersAPI.savePhoto(file);\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(savePhotoSuccessAC(response.data.data.photos))\r\n//     }\r\n// };\r\n// export const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n//     const userId = getState().auth.userId;\r\n//     const response = await profileAPI.saveProfile(profile)\r\n// };\r\n\r\n\r\nexport default users_reducer\r\n*/","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx",["133"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx",["134"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx",["135"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx",["136"],"import React from \"react\";\r\nimport preloader from \"../../preloader.gif\";\r\n\r\nexport function Preloader() {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx",["137","138"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx",["139","140"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"141","replacedBy":"149"},{"ruleId":"143","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":18,"column":17,"nodeType":"153","endLine":18,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":21,"column":17,"nodeType":"153","endLine":21,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":24,"column":17,"nodeType":"153","endLine":24,"endColumn":20},{"ruleId":"141","replacedBy":"154"},{"ruleId":"143","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":12,"column":13,"nodeType":"153","endLine":12,"endColumn":41},{"ruleId":"156","severity":1,"message":"157","line":16,"column":13,"nodeType":"153","endLine":16,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":15,"column":17,"nodeType":"153","endLine":15,"endColumn":57},{"ruleId":"156","severity":1,"message":"157","line":18,"column":17,"nodeType":"153","endLine":18,"endColumn":74},{"ruleId":"145","severity":1,"message":"158","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"159","line":6,"column":20,"nodeType":"147","messageId":"148","endLine":6,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":71,"column":65,"nodeType":"162","messageId":"163","endLine":71,"endColumn":67},{"ruleId":"164","severity":1,"message":"165","line":31,"column":8,"nodeType":"166","endLine":31,"endColumn":10,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"158","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":48,"column":25,"nodeType":"153","endLine":51,"endColumn":128},{"ruleId":"156","severity":1,"message":"157","line":6,"column":9,"nodeType":"153","endLine":6,"endColumn":32},{"ruleId":"145","severity":1,"message":"168","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":17},{"ruleId":"164","severity":1,"message":"165","line":28,"column":8,"nodeType":"166","endLine":28,"endColumn":10,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":8,"nodeType":"166","endLine":23,"endColumn":10,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":28,"column":7,"nodeType":"147","messageId":"173","endLine":28,"endColumn":22},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar",["174"],["175"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["174"],["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.","'ProfilePageType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["176"],"'Redirect' is defined but never used.",["177"],["178"],"@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"179","fix":"182"},"Update the dependencies array to be: [props]",{"range":"183","text":"184"},{"range":"185","text":"184"},{"range":"186","text":"184"},[1102,1104],"[props]",[938,940],[663,665]]