[{"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx":"1","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx":"2","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts":"3","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx":"4","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"5","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx":"6","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"7","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx":"8","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx":"9","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx":"12","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts":"13","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts":"14","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts":"15","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts":"17","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx":"18","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx":"19","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx":"20","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx":"21","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx":"22","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts":"23","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx":"24","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts":"25","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx":"26","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"27","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Login\\Login.tsx":"28","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\utils\\validators\\validators.ts":"29","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\FormsControls\\FormsControls.tsx":"30"},{"size":382,"mtime":1617277097763,"results":"31","hashOfConfig":"32"},{"size":1295,"mtime":1628083771250,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1611322088332,"results":"34","hashOfConfig":"32"},{"size":919,"mtime":1617328802730,"results":"35","hashOfConfig":"32"},{"size":1489,"mtime":1627942517873,"results":"36","hashOfConfig":"32"},{"size":624,"mtime":1626939296216,"results":"37","hashOfConfig":"32"},{"size":442,"mtime":1616568125721,"results":"38","hashOfConfig":"32"},{"size":2438,"mtime":1628024150258,"results":"39","hashOfConfig":"32"},{"size":650,"mtime":1628089107459,"results":"40","hashOfConfig":"32"},{"size":497,"mtime":1612547726782,"results":"41","hashOfConfig":"32"},{"size":1136,"mtime":1626941657168,"results":"42","hashOfConfig":"32"},{"size":295,"mtime":1612547726772,"results":"43","hashOfConfig":"32"},{"size":1301,"mtime":1627940908450,"results":"44","hashOfConfig":"32"},{"size":4284,"mtime":1627939989855,"results":"45","hashOfConfig":"32"},{"size":711,"mtime":1626954741508,"results":"46","hashOfConfig":"32"},{"size":895,"mtime":1627940034353,"results":"47","hashOfConfig":"32"},{"size":11072,"mtime":1625909243851,"results":"48","hashOfConfig":"32"},{"size":2327,"mtime":1625909168709,"results":"49","hashOfConfig":"32"},{"size":809,"mtime":1627935374573,"results":"50","hashOfConfig":"32"},{"size":2750,"mtime":1625913710773,"results":"51","hashOfConfig":"32"},{"size":172,"mtime":1619902534195,"results":"52","hashOfConfig":"32"},{"size":1487,"mtime":1628102048481,"results":"53","hashOfConfig":"32"},{"size":2237,"mtime":1628093554717,"results":"54","hashOfConfig":"32"},{"size":1106,"mtime":1628089202717,"results":"55","hashOfConfig":"32"},{"size":1521,"mtime":1628076968447,"results":"56","hashOfConfig":"32"},{"size":800,"mtime":1626867972122,"results":"57","hashOfConfig":"32"},{"size":1124,"mtime":1626951380666,"results":"58","hashOfConfig":"32"},{"size":1836,"mtime":1628093226340,"results":"59","hashOfConfig":"32"},{"size":456,"mtime":1627941807318,"results":"60","hashOfConfig":"32"},{"size":839,"mtime":1628029548731,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1c8ojw1",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\index.tsx",[],["136","137"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\App.tsx",[],["138","139"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\reportWebVitals.ts",[],["140","141"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Navbar\\Navbar.tsx",["142","143","144"],"import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar",["145","146"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],["147","148"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\Profile.tsx",[],["149","150"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["151"],"import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avaPost}/>\r\n            { props.message }\r\n            <div>\r\n                <span>likes: { props.likesCount }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\Header.tsx",["152"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],["153","154"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["155"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\dialogs_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\profile_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\redux_store.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["156"],"import React from 'react'\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profile_reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PostsType} from \"../../../types\";\r\nimport {AppStateType} from \"../../../redux/redux_store\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profile_reducer.posts\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newPostText: string) => dispatch(addPost(newPostText))\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\users_reducer.ts",["157"],"import {ActionsType, UserProfileType} from \"../types\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserProfileType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const);\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(response =>{\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n};\r\n\r\n// export const follow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.follow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(followAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId) => {\r\n//     return (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         usersAPI.unfollow(userId)\r\n//             .then(response => {\r\n//                 if (response.data.resultCode === 0) {\r\n//                     dispatch(unfollowAC(userId))\r\n//                 }\r\n//                 dispatch(toggleFollowingProgress(false, userId))\r\n//             })\r\n//     }\r\n// };\r\n\r\nexport default usersReducer\r\n\r\n\r\n/*\r\nimport {UserProfileType, UsersPageType} from \"../types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            fullName: \"Misha\",\r\n            status: \"Still learning =)\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Saint-P\", country: \"Russia\"}\r\n        },\r\n        {\r\n            id: 2,\r\n            fullName: \"LoL\",\r\n            status: \"What?!\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Minsk\", country: \"Belarus\"}\r\n        },\r\n        {\r\n            id: 3,\r\n            fullName: \"Dog\",\r\n            status: \"Hrrrr\",\r\n            photoURL: \"\",\r\n            followed: false,\r\n            location: {city: \"Kiev\", country: \"Ukraine\"}\r\n        }\r\n    ] as Array<UserProfileType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // array of users ids\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst users_reducer = (state: UsersPageType, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        // case FOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        //     };\r\n        // case UNFOLLOW:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n        //     };\r\n        // case SET_USERS:\r\n        //     return {\r\n        //         ...state,\r\n        //         status: action.status\r\n        //     };\r\n        // case SET_USER_PROFILE:\r\n        //     return {\r\n        //         ...state,\r\n        //         users: action.users\r\n        //     };\r\n        // case SET_CURRENT_PAGE:\r\n        //     return {\r\n        //         ...state,\r\n        //         followingInProgress: action.isFetching\r\n        //             ? [...state.followingInProgress, action.userIf]\r\n        //             : state.followingInProgress.filter(id => != action.userId)\r\n        //     };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const);\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\nexport const setUsers = (users: Array<UserProfileType>) => ({type: SET_USERS, users} as const);\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const);\r\n\r\n// export const requestUsers = (page: number, pageSize: number) => {\r\n//     return async (dispatch: any) => {\r\n//         dispatch(toggleIsFetching(true));\r\n//         dispatch(setCurrentPage(page));\r\n//\r\n//         let data = await usersAPI.getUsers(page, pageSize);\r\n//         dispatch(toggleIsFetching(false));\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(setTotalUsersCount(data.totalCount))\r\n//     }\r\n// };\r\n//\r\n// const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n//     dispatch(toggleFollowingInProgress(true, userId))\r\n//     let response = await apiMethod(userId)\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(actionCreator(userId))\r\n//     }\r\n//     dispatch(toggleFollowingInProgress(false, userId))\r\n// };\r\n//\r\n// export const follow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), followSuccess)\r\n//     }\r\n// };\r\n//\r\n// export const unfollow = (userId: number) => {\r\n//     return async (dispatch: any) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n//     }\r\n// };\r\n\r\n\r\n// export const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getProfile(userId);\r\n//     dispatch(setUserProfileAC(response.data))\r\n// };\r\n// export const getStatus = (userId: number) => async (dispatch: any) => {\r\n//     const response = await usersAPI.getStatus(userId);\r\n//     dispatch(setStatusAC(response.data))\r\n// };\r\n// export const updateStatus = (userId: string) => async (dispatch: any) => {\r\n//     try {\r\n//         const response = await usersAPI.updateStatus(status);\r\n//\r\n//         if (response.data.resultCode === 0) {\r\n//             dispatch(setStatus(status))\r\n//         }\r\n//     } catch (error) {\r\n//         //\r\n//     }\r\n// };\r\n// export const savePhoto = (file: any) => async (dispatch: any) => {\r\n//     const response = await usersAPI.savePhoto(file);\r\n//\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(savePhotoSuccessAC(response.data.data.photos))\r\n//     }\r\n// };\r\n// export const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n//     const userId = getState().auth.userId;\r\n//     const response = await profileAPI.saveProfile(profile)\r\n// };\r\n\r\n\r\nexport default users_reducer\r\n*/","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\UsersContainer.tsx",["158"],"import {connect} from \"react-redux\";\r\nimport {UserProfileType} from \"../../types\";\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users_reducer\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\nimport {Users} from \"./Users\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserProfileType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nfunction UsersAPI(props: UsersPropsType) {\r\n\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize);\r\n    }, []);\r\n\r\n    const setCurrentPageHandler = (p: number) => {\r\n        props.getUsers(p, props.pageSize);\r\n    };\r\n\r\n    return <>\r\n        {props.isFetching ? <Preloader/> : null}\r\n        <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            currentPage={props.currentPage}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            setCurrentPageHandler={setCurrentPageHandler}\r\n            toggleFollowingProgress={props.toggleFollowingProgress}\r\n            followinInProgress={props.followingInProgress}\r\n        />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n})(UsersAPI);","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Users\\Users.tsx",["159"],"import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {UserProfileType} from \"../../types\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserProfileType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPageHandler: (p: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followinInProgress: number[]\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    pages.map(p => {\r\n                        return <span className={props.currentPage === p ? s.selectedPage : \"\"}\r\n                                     onClick={(e) => {\r\n                                         props.setCurrentPageHandler(p)\r\n                                     }}> |{p}| </span>\r\n                    })\r\n                }\r\n                ...\r\n                <span className={props.currentPage === pagesCount ? s.selectedPage : \"\"}\r\n                      onClick={(e) => {\r\n                          props.setCurrentPageHandler(pagesCount)\r\n                      }}> |{pagesCount}| </span>\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${u.id}`}>\r\n                        <img className={s.userAva}\r\n                             src={u.photos.small != null ?\r\n                                 u.photos.small :\r\n                                 \"https://t4.ftcdn.net/jpg/03/32/59/65/360_F_332596535_lAdLhf6KzbW6PWXBWeIFTovTii1drkbT.jpg\"}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followinInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followinInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <hr/>\r\n                </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\Preloader\\Preloader.tsx",["160"],"import React from \"react\";\r\nimport preloader from \"../../preloader.gif\";\r\n\r\nexport function Preloader() {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};","F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileContainer.tsx",["161"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\redux\\auth_reducer.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Header\\HeaderContainer.tsx",["162","163"],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\api\\api.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\hoc\\withAuthRedirect.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\components\\Login\\Login.tsx",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\utils\\validators\\validators.ts",[],"F:\\my_programming\\it-itcubator\\social_network_tsjsx\\src\\common\\FormsControls\\FormsControls.tsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"164","replacedBy":"168"},{"ruleId":"166","replacedBy":"169"},{"ruleId":"164","replacedBy":"170"},{"ruleId":"166","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":18,"column":17,"nodeType":"174","endLine":18,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":21,"column":17,"nodeType":"174","endLine":21,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":24,"column":17,"nodeType":"174","endLine":24,"endColumn":20},{"ruleId":"164","replacedBy":"175"},{"ruleId":"166","replacedBy":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"166","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":12,"column":13,"nodeType":"174","endLine":12,"endColumn":41},{"ruleId":"181","severity":1,"message":"182","line":16,"column":13,"nodeType":"174","endLine":16,"endColumn":20},{"ruleId":"164","replacedBy":"183"},{"ruleId":"166","replacedBy":"184"},{"ruleId":"181","severity":1,"message":"182","line":26,"column":17,"nodeType":"174","endLine":26,"endColumn":83},{"ruleId":"185","severity":1,"message":"186","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":71,"column":65,"nodeType":"191","messageId":"192","endLine":71,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":31,"column":8,"nodeType":"195","endLine":31,"endColumn":10,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"182","line":48,"column":25,"nodeType":"174","endLine":51,"endColumn":128},{"ruleId":"181","severity":1,"message":"182","line":6,"column":9,"nodeType":"174","endLine":6,"endColumn":32},{"ruleId":"193","severity":1,"message":"194","line":32,"column":8,"nodeType":"195","endLine":32,"endColumn":10,"suggestions":"197"},{"ruleId":"193","severity":1,"message":"194","line":24,"column":8,"nodeType":"195","endLine":24,"endColumn":10,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":29,"column":7,"nodeType":"187","messageId":"201","endLine":29,"endColumn":22},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],["202"],["203"],["202"],["203"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["202"],["203"],["202"],["203"],["202"],["203"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["202"],["203"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["204"],["205"],["206"],"@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},{"desc":"207","fix":"210"},"Update the dependencies array to be: [props]",{"range":"211","text":"212"},{"range":"213","text":"212"},{"range":"214","text":"212"},[1102,1104],"[props]",[1072,1074],[695,697]]