{"version":3,"sources":["App.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","App.tsx","render.tsx","redux/state.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","alt","Navbar","nav","item","to","activeClassName","active","ProfileInfo","avaWallpaper","src","discriptionBlock","Post","props","avaPost","message","likesCount","MyPosts","posts","map","p","postsBlock","value","onChange","e","onPostChange","currentTarget","onClick","addPost","Profile","profilePage","DialogItem","dialog","id","name","Message","Dialogs","dialogsElements","dialogsPage","dialogs","messagesElements","messages","dialogsItems","placeholder","App","appWrapper","appWrapperContent","path","render","state","messageForNewPost","renderTree","ReactDOM","StrictMode","document","getElementById","newPost","Date","getTime","push","newText"],"mappings":"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","file":"static/js/main.ead6acbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1bX5t\",\"appWrapperContent\":\"App_appWrapperContent__3s6_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWallpaper\":\"ProfileInfo_avaWallpaper__1qztJ\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__BYc_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2p8sP\",\"posts\":\"MyPosts_posts__EgXkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaPost\":\"Post_avaPost__2_k3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3JMbQ\",\"loginBlock\":\"Header_loginBlock__2lSx2\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo'/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Users</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n// import Preloader from \"../../common/preloader/Preloader\";\r\n\r\nconst ProfileInfo = () => {\r\n    // if(!props.profile) {\r\n    //     return <Preloader/>\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.avaWallpaper} src=\"\" alt=\"avaWallpaper\"/>\r\n            </div>\r\n            <div className={s.discriptionBlock}>\r\n                {/*<img src={props.profile.photos.large} />*/}\r\n                <img src=\"\" alt=\"ava\" />\r\n                <br></br>\r\n                    <label>aboutMe: props.profile.aboutMe</label>\r\n                <br></br>\r\n                    <label>fullName: props.profile.fullName</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avaPost}/>\r\n            { props.message }\r\n            <div>\r\n                <span>likes: { props.likesCount }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: (postMessage: string) => void\r\n    message: string\r\n    onPostChange: (newText: string) => void\r\n}\r\ntype PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n    let posts = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const addPost = () => {\r\n        props.addPost(props.message)\r\n    };\r\n\r\n    const newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onPostChange(e.currentTarget.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div><textarea value={props.message} onChange={newTextChangeHandler}/></div>\r\n                <div><button onClick={addPost}>Add post</button></div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\n\r\ntype RootStateType = {\r\n    profilePage: ProfilePageType\r\n    addPost: (postMessage: string) => void\r\n    message: string\r\n    onPostChange: (newText: string) => void\r\n}\r\ntype ProfilePageType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Profile(props: RootStateType) {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     addPost={props.addPost}\r\n                     message={props.message}\r\n                     onPostChange={props.onPostChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogsPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: DialogsPropsType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n            {/*<NavLink to=\"/dialogs/\">props.name</NavLink>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype MessagesPropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagesPropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\ntype RootStateType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\ntype DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nfunction Dialogs(props: RootStateType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map( dialog => <DialogItem name={dialog.name} id={dialog.id} />)\r\n    let messagesElements = props.dialogsPage.messages.map( message => <Message message={message.message} id={message.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea placeholder='enter your message'></textarea></div>\r\n                    <div>\r\n                        <button>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\nimport s from \"./App.module.css\"\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport state, {addPost, onPostChange} from './redux/state'\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <div className={s.appWrapper}>\n                <Header/>\n                <Navbar/>\n                <div className={s.appWrapperContent}>\n                    <Route path={'/profile'} render={() => <Profile profilePage={state.profilePage}\n                                                                    addPost={addPost}\n                                                                    message={state.profilePage.messageForNewPost}\n                                                                    onPostChange={onPostChange} />}/>\n                    <Route path={'/dialogs'} render={() => <Dialogs dialogsPage={state.dialogsPage}/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {RootStateType} from \"./redux/state\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\n\r\nexport const renderTree = (state: RootStateType) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n","import {renderTree} from \"../render\";\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\ntype PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\ntype ProfilePageType = {\r\n    messageForNewPost: string\r\n    posts: Array<PostsType>\r\n}\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nlet state: RootStateType = {\r\n    profilePage: {\r\n        messageForNewPost: \"\",\r\n        posts: [\r\n            {id: 1, message: 'Hi, how are you?', likesCount: 45},\r\n            {id: 2, message: 'Programming.....', likesCount: 18}\r\n        ]\r\n    },\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Димыч'},\r\n            {id: 2, name: 'Андрей'},\r\n            {id: 3, name: 'Света'},\r\n            {id: 4, name: 'Саша'},\r\n            {id: 5, name: 'Валера'},\r\n            {id: 6, name: 'Маша'}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hi'},\r\n            {id: 2, message: 'Hello'},\r\n            {id: 3, message: 'Yo'},\r\n            {id: 4, message: 'Yo'},\r\n            {id: 5, message: 'Yo'}\r\n        ]\r\n    }\r\n};\r\n\r\n\r\nexport const addPost = () => {\r\n    debugger\r\n    const newPost: PostsType = {\r\n        id: new Date().getTime(),\r\n        message: state.profilePage.messageForNewPost,\r\n        likesCount: 0\r\n    };\r\n\r\n    state.profilePage.posts.push(newPost);\r\n    state.profilePage.messageForNewPost = \"\";\r\n\r\n    renderTree(state)\r\n};\r\n\r\nexport const onPostChange = (newText: string) => {\r\n    state.profilePage.messageForNewPost = newText;\r\n    renderTree(state)\r\n};\r\n\r\n\r\nexport default state","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport state from \"./redux/state\";\nimport {renderTree} from \"./render\";\n\nrenderTree(state);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3-fqW\",\"item\":\"Navbar_item__32DLS\",\"active\":\"Navbar_active__fB4gH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Vo8vD\",\"dialogsItems\":\"Dialogs_dialogsItems__gwdRO\",\"dialog\":\"Dialogs_dialog__3E4tW\",\"active\":\"Dialogs_active__2tRUx\",\"messages\":\"Dialogs_messages__1vjJi\",\"message\":\"Dialogs_message__3Mc-D\"};"],"sourceRoot":""}